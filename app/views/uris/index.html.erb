<h1>Check yours</h1>

<%= notification_area %>

<p>
<% form_for @uri || Uri.new do |f| %>
  <%= f.error_messages %>
  <%= f.text_field :uri %>
  <%= f.submit 'Go! >>' %>
<% end -%>
</p>

<h1>Results</h1>

<p>
<strong>Total</strong>
<%= Uri.count %>
</p>

<h2>OpenID</h2>

<h3>Distribution of OpenID versions</h3>

<% results = { "only v1, v1.1" => Uri.openid_version(:only_1).count,
                "only v2" => Uri.openid_version(:only_2).count,
                "both" => Uri.openid_version(:both).count } %>

<%= image_tag Gchart.pie(:title => "Distribution of OpenID versions.",
                         :data => results.values,
                         :legend => results.keys,
                         :size => '600x200') %>

<% results.each_pair do |key, value| %>
<p>
  <strong><%= key %></strong>: <%= value * 100.0 / Uri.openid_version(:any).count %>
</p>
<% end %>

<h3>Discovery technologies</h3>
<% 
results = {
  "HTML" => Uri.html_discovery(:any).count * 100.0 / Uri.count,
  "XRDS" => Uri.xrds_discovery(:any).count * 100.0 / Uri.count
}
%>


<%= image_tag Gchart.bar(:title => "OpenID Discovery Technologies",
                         :data => results.values,
                         :axis_with_labels => "x,y",
                         :axis_labels => [ results.keys, (0..4).map{ |n| n * 25 } ],
                         :max_value => 100,
                         :bar_width_and_spacing => { :width => 50, :spacing => 30 },
                         :size => '600x200')
%>

<% results.each_pair do |key, value| %>
<p>
<strong><%= key %></strong>: <%= value %>%
</p>
<% end %>


<h3>Distribution of OpenID versions, HTML discovery</h3>

<% results = { "only v1, v1.1" => Uri.html_discovery(:only_1).count,
                "only v2" => Uri.html_discovery(:only_2).count,
                "both" => Uri.html_discovery(:both).count } %>

<%= image_tag Gchart.pie(:title => "Distribution of OpenID versions. HTML discovery",
                         :data => results.values,
                         :legend => results.keys,
                         :size => '600x200') %>

<% results.each_pair do |key, value| %>
<p>
  <strong><%= key %></strong>: <%= value * 100.0 / Uri.html_discovery(:any).count %>
</p>
<% end %>

<h3>Distribution of OpenID versions, XRDS discovery</h3>

<% results = { "only v1, v1.1" => Uri.xrds_discovery(:only_1).count,
                "only v2" => Uri.xrds_discovery(:only_2).count,
                "both" => Uri.xrds_discovery(:both).count } %>

<%= image_tag Gchart.pie(:title => "Distribution of OpenID versions. XRDS discovery",
                         :data => results.values,
                         :legend => results.keys,
                         :size => '600x200') %>

<% results.each_pair do |key, value| %>
<p>
  <strong><%= key %></strong>: <%= value * 100.0 / Uri.xrds_discovery(:any).count %>
</p>
<% end %>


<h2>Technologies</h2>

<% 
results = {
  "FoaF" => Uri.foaf(true).count * 100.0 / Uri.count,
  "Atom" => Uri.atom(true).count * 100.0 / Uri.count,
  "RSS" => Uri.rss(true).count * 100.0 / Uri.count,
  "RSD" => Uri.rsd(true).count * 100.0 / Uri.count,
  "Microformats" => Uri.microformats("_").count * 100.0 / Uri.count,
  "AtomPub" => Uri.atompub(true).count * 100.0 / Uri.count,
  "XRDS" => Uri.xrds_service_type("http").count * 100.0 / Uri.count
}
%>


<%= image_tag Gchart.bar(:title => "Meta Technologies",
                         :data => results.values,
                         :axis_with_labels => "x,y",
                         :axis_labels => [ results.keys, (0..4).map{ |n| n * 25 } ],
                         :max_value => 100,
                         :bar_width_and_spacing => { :width => 50, :spacing => 30 },
                         :size => '600x200')
%>

<p>
<strong>FoaF</strong>
Yes <%= "%0.2f" % (Uri.foaf(true).count * 100.0 / Uri.count) %>%
No <%= "%0.2f" % (Uri.foaf(false).count * 100.0 / Uri.count) %>%
N/A <%= "%0.2f" % (Uri.foaf(nil).count * 100.0 / Uri.count) %>%
</p>

<p>
<strong>RSS</strong>
Yes <%= "%0.2f" % (Uri.rss(true).count * 100.0 / Uri.count) %>%
No <%= "%0.2f" % (Uri.rss(false).count * 100.0 / Uri.count) %>%
N/A <%= "%0.2f" % (Uri.rss(nil).count * 100.0 / Uri.count) %>%
</p>

<p>
<strong>Atom</strong>
Yes <%= "%0.2f" % (Uri.atom(true).count * 100.0 / Uri.count) %>%
No <%= "%0.2f" % (Uri.atom(false).count * 100.0 / Uri.count) %>%
N/A <%= "%0.2f" % (Uri.atom(nil).count * 100.0 / Uri.count) %>%
</p>


<p>
<strong>AtomPub Service Document</strong>
Yes <%= "%0.2f" % (Uri.atompub(true).count * 100.0 / Uri.count) %>%
No <%= "%0.2f" % (Uri.atompub(false).count * 100.0 / Uri.count) %>%
N/A <%= "%0.2f" % (Uri.atompub(nil).count * 100.0 / Uri.count) %>%
</p>

<p>
<strong>Really Simple Discovery (RSD)</strong>
Yes <%= "%0.2f" % (Uri.rsd(true).count * 100.0 / Uri.count) %>%
No <%= "%0.2f" % (Uri.rsd(false).count * 100.0 / Uri.count) %>%
N/A <%= "%0.2f" % (Uri.rsd(nil).count * 100.0 / Uri.count) %>%
</p>

<p>
<strong>eXtensible Resource Descriptor Sequence (XRDS)</strong>
Yes <%= "%0.2f" % (Uri.xrds_service_type("http").count * 100.0 / Uri.count) %>%
No <%= "%0.2f" % (Uri.xrds_service_type("[]").count * 100.0 / Uri.count) %>%
</p>

<p>
<strong>Microformats</strong>
Yes <%= "%0.2f" % (Uri.microformats("_").count * 100.0 / Uri.count) %>%
No <%= "%0.2f" % (Uri.microformats("").count * 100.0 / Uri.count) %>%
N/A <%= "%0.2f" % (Uri.microformats(nil).count * 100.0 / Uri.count) %>%
</p>

<h2>Microformats</h2>

<% 
microformats = UriProperty.microformats.inject({}) do |hash, m| 
                 hash[m] = (Uri.microformats(m).count * 100.0 / Uri.count)
                 hash
               end
%>


<%= image_tag Gchart.bar(:title => "Microformats",
                         :data => microformats.values,
                         :axis_with_labels => "x,y",
                         :axis_labels => [ microformats.keys, (0..4).map{ |n| n * 25 } ],
                         :max_value => 100,
                         :bar_width_and_spacing => { :width => 50, :spacing => 20 },
                         :size => '700x200')
%>



<% UriProperty.microformats.each do |m| %>
<p>
<strong><%= m %></strong>: <%= "%0.2f" % (Uri.microformats(m).count * 100.0 / Uri.count) %>%
</p>
<% end %>

<h2>eXtensible Resource Descriptor Sequence</h2>
<%= image_tag Gchart.bar(:title => "XRDS",
                         :data => UriProperty::XrdsServiceTypes.keys.map{ |k|
                                    Uri.xrds_service_type(k).count},
                         :axis_with_labels => "x,y",
                         :axis_labels => [ UriProperty::XrdsServiceTypes.values.map{ |v| v[0..10] }, [0, Uri.xrds_service_type('http').count] ],
                         :max_value => Uri.xrds_service_type('http').count,
                         :bar_width_and_spacing => { :width => 50, :spacing => 20 },
                         :size => '1000x200')
%>

<% UriProperty::XrdsServiceTypes.each_pair do |uri, description| %>
<p>
<strong><%= description %></strong> <%= Uri.xrds_service_type(uri).count %>
</p>
<% end %>

<h2>OpenID URI Domains</h2>

<% results = Uri::Domains.inject({}) do |r, p|
               c = Uri.domain(p).count
               r[p] = c if c > Uri.count * 0.01
               r
             end
   results["other"] = Uri.count - results.values.inject(0){ |sum, value| sum + value }
   ordered_results = results.sort{ |a, b| b.last <=> a.last }
%>
               
<%= image_tag Gchart.bar(:title => "OpenID URI Domains",
                         :data => ordered_results.map(&:last).flatten,
                         :axis_with_labels => "x,y",
                         :axis_labels => [ ordered_results.map(&:first).flatten, [0, results['other'] ]],
                         :bar_width_and_spacing => { :width => 50, :spacing => 30 },
                         :size => '600x200')
%>

<h2>Providers</h2>

<% results = UriProperty.openid_providers.inject({}) do |r, p|
               c = Uri.openid_provider(p).count
               r[p] = c if c > Uri.count * 0.01
               r
             end
   results["other"] = Uri.count - results.values.inject(0){ |sum, value| sum + value }
   ordered_results = results.sort{ |a, b| b.last <=> a.last }
%>
               
<%= image_tag Gchart.bar(:title => "OpenID Providers",
                         :data => ordered_results.map(&:last).flatten,
                         :axis_with_labels => "x,y",
                         :axis_labels => [ ordered_results.map(&:first).flatten, [0, results['other'] ]],
                         :bar_width_and_spacing => { :width => 50, :spacing => 30 },
                         :size => '600x200')
%>

<% ordered_results.each do |r| %>
  <p>
  <strong><%= r.first %></strong>: <%= r.last %>
  </p>
<% end -%>



<h2>URIs detailed information</h2>

<div class="span-22 last">
  <div class="span-8">
    OpenID
  </div>
  <div class="span-2">
    FoaF?
  </div>
  <div class="span-2">
    RSS feeds?
  </div>
  <div class="span-2">
    Atom feeds?
  </div>
  <div class="span-2">
    AtomPub Service?
  </div>
  <div class="span-2">
    RSD?
  </div>
  <div class="span-2">
    Microformats?
  </div>
</div>


<% Uri.all(:include => :uri_property).each do |uri| %>
<% div_for uri, :class => 'span-22 last' do %>
<div class="span-8">
<%= link_to uri.to_s, uri.to_s %>
</div>
<div class="span-2">
  <%= uri.uri_property.foaf.nil? ? "N/A" : uri.uri_property.foaf %>
</div>
<div class="span-2">
  <%= uri.uri_property.rss.nil? ? "N/A" : uri.uri_property.rss %>
</div>
<div class="span-2">
  <%= uri.uri_property.atom.nil? ? "N/A" : uri.uri_property.atom %>
</div>
<div class="span-2">
  <%= uri.uri_property.atompub.nil? ? "N/A" : uri.uri_property.atompub %>
</div>
<div class="span-2">
  <%= uri.uri_property.rsd.nil? ? "N/A" : uri.uri_property.rsd %>
</div>
<div class="span-2">
  <%= uri.uri_property.microformats %>
</div>
<div class="clear">
  <%= uri.uri_property.xrds_service_types.try(:join, ", ") %>
</div>
<% end %>
<% end %>
